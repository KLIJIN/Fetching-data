{"version":3,"sources":["Copmonents/Table.jsx","App.js","index.js"],"names":["Table","data","length","border","map","item","age","id","name","phone","App","useState","setData","getFetch","useCallback","a","fetch","response","json","console","log","useEffect","className","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0RA2CeA,EAxCD,SAAC,GAAc,IAAZC,EAAW,EAAXA,KAEf,OAAO,+BAEC,OAAJA,QAAI,IAAJA,OAAA,EAAAA,EAAMC,QAAS,GACf,wBAAOC,OAAO,IAAd,UACE,gCACE,+BACE,sCACA,qCACA,4CAGJ,gCACGF,EAAKG,KAAI,SAACC,GAAU,IACXC,EAAyBD,EAAzBC,IAAKC,EAAoBF,EAApBE,GAAIC,EAAgBH,EAAhBG,KAAMC,EAAUJ,EAAVI,MACvB,OACE,+BACE,6BAAKD,IACL,6BAAKF,IACL,6BAAKG,MAHEF,cCeRG,MA9Bf,WAAe,MAEWC,mBAAS,IAFpB,mBAENV,EAFM,KAEAW,EAFA,KAKPC,EAAWC,sBAAW,sBAAC,8BAAAC,EAAA,4DAEzB,oHAFyB,kBAIFC,MAFvB,qHAFyB,cAInBC,EAJmB,gBAKNA,EAASC,OALH,cAKnBjB,EALmB,OAMzBW,EAAQX,GANiB,kBAOlBA,GAPkB,yCASzBkB,QAAQC,IAAI,iDAAZ,MATyB,kFAY1B,IAMH,OAJAC,qBAAU,WACRR,MACC,CAACA,IAGF,qBAAKS,UAAU,MAAf,SACE,cAAC,EAAD,CAAOrB,KAAMA,OCxBnBsB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.6eee3ba2.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./table.css\"\r\n\r\nconst Table = ({ data }) => {\r\n\r\n  return <div>\r\n    {\r\n      data?.length > 0 &&\r\n      <table border=\"1\">\r\n        <thead>\r\n          <tr>\r\n            <th>name</th>\r\n            <th>age</th>\r\n            <th>phone</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {data.map((item) => {\r\n            const { age, id, name, phone } = item;\r\n            return (\r\n              <tr key={id}>\r\n                <td>{name}</td>\r\n                <td>{age}</td>\r\n                <td>{phone}</td>\r\n              </tr>\r\n            )\r\n          })\r\n          }\r\n        </tbody>\r\n\r\n\r\n      </table>\r\n\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n  </div>\r\n};\r\nexport default Table;","import React, { useEffect, useState, useCallback } from \"react\";\nimport './App.css';\nimport Table from \"./Copmonents/Table.jsx\";\n\n\nfunction App() {\n  // const [isLoading, setisLoading] = useState(false);\n  const [data, setData] = useState([]);\n\n\n  const getFetch = useCallback(async () => {\n    let url =\n      \"https://bitbucket.org/GuestOne/goodline-test-task/raw/64ddcf7539c64d7a7ad5efb4dcef1f20a1805ef9/frontend/data.json\";\n    try {\n      const response = await fetch(url);\n      const data = await response.json();\n      setData(data);\n      return data;\n    } catch (error) {\n      console.log(\"GetFetch Ошибка:\", error);\n      return error;\n    }\n  }, []);\n\n  useEffect(() => {\n    getFetch();\n  }, [getFetch]);\n\n  return (\n    <div className=\"App\">\n      <Table data={data} />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\n"],"sourceRoot":""}